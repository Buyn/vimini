## Main
# main
snippet main
	int main(int argc, const char *argv[])
	{
		${0}
		return 0;
	}
endsnippet
# main(void)
snippet mainn
	int main(void)
	{
		${0}
		return 0;
	}
endsnippet
##
## Control Statements
# if
snippet if
	if (${1:true}) {
		${0:${VISUAL}}
	}
endsnippet
snippet ife
	if (${1:true}) {
		${2:${VISUAL}}
	} else {
		${0}
	}
endsnippet
# else
snippet el
	else {
		${0:${VISUAL}}
	}
endsnippet
# else if
snippet elif
	else if (${1:true}) {
		${0:${VISUAL}}
	}
endsnippet
# ifi
snippet ifi
	if (${1:true}) ${0};
endsnippet
# ternary
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
endsnippet
##
## Loops
# for
snippet for
	for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {
		${4}
	}
endsnippet
# for (custom)
snippet forr
	for (int ${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {
		${5}
	}
endsnippet
# while
snippet wh
	while (${1:/* condition */}) {
		${0:${VISUAL}}
	}
endsnippet
# do... while
snippet do
	do {
		${0:${VISUAL}}
	} while (${1:/* condition */});
endsnippet
##
## Functions
# function definition

snippet ifndef
#ifndef ${1:SOME_DEFINE}//{{{
#define $1
$0
#endif /* $1 }}}*/
endsnippet

snippet ifdu
#ifndef ${1:UNITTEST}/*{{{*/
$0
#endif /* $1 }}}*/
endsnippet

snippet fun
/*   $2   * {{{ */
${1:void} ${2:function_name}(${3:void}){
	${4}} //}}}
$0
endsnippet


# function definition with zero parameters
snippet fun0
	${1:void} ${2:function_name}()
	{
		${3}
	}
# function definition with Doxygen documentation
snippet dfun0
	/*! \brief ${1:Brief function description here}
	 *
	 *  ${2:Detailed description of the function}
	 *
	 * \return ${3:Return parameter description}
	 */
	${4:void} ${5:function_name}()
	{
		${6}
	}
endsnippet
# function definition with one parameter
snippet fun1
	${1:void} ${2:function_name}(${3:Type} ${4:Parameter})
	{
		${5}
	}
endsnippet
# function definition with one parameter with  Doxygen documentation
snippet dfun1
	/*! \brief ${1:Brief function description here}
	 *
	 *  ${2:Detailed description of the function}
	 *
	 * \param $3 ${4:Parameter description}
	 * \return ${5:Return parameter description}
	 */
	${6:void} ${7:function_name}(${8:Type} ${3:Parameter})
	{
		${9}
	}
endsnippet
# function definition with two parameters
snippet fun2
	${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter})
	{
		${7}
	}
endsnippet
##
# TODO section
snippet todo
	/*! TODO: ${1:Todo description here}
	 *  \todo $1
	 */
endsnippet
